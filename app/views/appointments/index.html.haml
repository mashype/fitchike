%script{:src => "//maps.google.com/maps/api/js?v=3.18&sensor=false&client=&key=&libraries=geometry&language=&hl=&region="}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js"}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js", :type => "text"}

.wrapper_with_padding
	%h2 Select an available appointment now to get started	
	%br/
	.panel.panel-default
		.panel-body
			.row
				.col-md-9
					#appointments.transitions-enabled
						- unless @appointments.blank?
							- @appointments.each do |appointment|
								%a{ href: (url_for [appointment])}
									.box.panel.panel-default
										.panel-heading
											%h2= appointment.title
										.panel-body
											.table-responsive
												%tr
												.col-md-4.nopadding
													= image_tag appointment.profile.avatar.url(:medium)
												.col-sm-8
													.box_text
														%strong Price:
														= number_to_currency(appointment.price, unit:"$")		
														%br
														%strong Length:
														= appointment.length.appointment_length	
														%br/
														%strong Location:
														= appointment.location.address_1
														%br/
														%strong Trainer:
														= appointment.profile.username													

						- else 
							%p Sorry, but all our appointments are totally booked up right now.

				.col-md-3
					%img{:style => "width: 100%;"}
						#map{:style => "width: 100%; height: 200px;"}	
					%p 
					= form_tag appointments_path, :method => :get do
						%p= text_field_tag :search, params[:search], placeholder: 'Update your search here...'
						%p= submit_tag "Refresh Search", :search => nil



:javascript
		$('.star-rating').raty({
				path: '/assets/',
				readOnly: true,
				score: function() {
						return $(this).attr('dscore');
				}
		}); 

:javascript
	handler = Gmaps.build('Google');
	handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
		markers = handler.addMarkers(#{raw @hash.to_json});
		handler.bounds.extendWith(markers);
		handler.fitMapToBounds();
	});

